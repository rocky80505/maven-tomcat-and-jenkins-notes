provider "aws" {
  region  = "us-west-2"              # AWS region to create resources in
  access_key = "YOUR_ACCESS_KEY"      # Optional: Your AWS access key
  secret_key = "YOUR_SECRET_KEY"      # Optional: Your AWS secret key
  profile   = "your-profile"          # Optional: AWS profile from your credentials file
  token     = "YOUR_SESSION_TOKEN"    # Optional: Session token for temporary credentials
}



# vpc.tf
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
  enable_dns_support = true
  enable_dns_hostnames = true
  tags = {
    Name = "my_vpc"
  }
}




# subnet.tf
resource "aws_subnet" "my_subnet" {
  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = "10.0.1.0/24"
  availability_zone = "us-west-2a"  # Change to your preferred AZ
  tags = {
    Name = "my_subnet"
  }
}



# internet_gateway.tf
resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.my_vpc.id
  tags = {
    Name = "my_internet_gateway"
  }
}



# route_table.tf
resource "aws_route_table" "my_route_table" {
  vpc_id = aws_vpc.my_vpc.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.my_igw.id
  }
  tags = {
    Name = "my_route_table"
  }
}

resource "aws_route_table_association" "my_route_table_association" {
  subnet_id      = aws_subnet.my_subnet.id
  route_table_id = aws_route_table.my_route_table.id
}








# security_group.tf
resource "aws_security_group" "my_sg" {
  vpc_id = aws_vpc.my_vpc.id
  tags = {
    Name = "my_security_group"
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}





# ec2.tf
resource "aws_instance" "my_instance" {
  ami           = "ami-0c55b159cbfafe1f0"  #ur preffered ami
  instance_type = "t2.micro"
  subnet_id     = "subnet-0bb1c79de4EXAMPLE"   #your preffered subnet id
  vpc_security_group_ids = ["sg-0a1b2c3d4e5f6g7h8"]   #ur preffered security group id

  tags = {
    Name = "MyInstance"
  }
}

  # Optionally specify a key pair if you want to SSH into the instance
  # key_name = "your-key-name"
}









resource "aws_instance" "example" {
  ami           = "ami-12345678" # Replace with your AMI ID
  instance_type = "t2.micro"      # Replace with your desired instance type
  key_name      = "my-existing-keypair" # Name of your existing key pair

  tags = {
    Name = "MyInstance"
  }
}






provider "aws" {
  region = "us-west-2" # Change to your desired region
}

resource "aws_key_pair" "example" {
  key_name   = "my-keypair"
  public_key = file("~/.ssh/id_rsa.pub") # Path to your existing public key
}

resource "aws_instance" "example" {
  ami           = "ami-12345678" # Replace with your AMI ID
  instance_type = "t2.micro"      # Replace with your desired instance type
  key_name      = aws_key_pair.example.key_name
  
  tags = {
    Name = "MyInstance"
  }
}

output "instance_id" {
  value = aws_instance.example.id
}
